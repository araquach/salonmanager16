{"version":3,"sources":["release.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"jquery-ui.js","sourcesContent":["module.exports = function( Release ) {\n\nvar crypto = require( \"crypto\" );\nvar shell = require( \"shelljs\" ),\n\tpath = require( \"path\" ),\n\tfs = require( \"fs\" );\n\nfunction replaceAtVersion() {\n\tconsole.log( \"Replacing @VERSION...\" );\n\tvar matches = [];\n\n\tfunction recurse( folder ) {\n\t\tfs.readdirSync( folder ).forEach( function( fileName ) {\n\t\t\tvar content,\n\t\t\t\tfullPath = folder + \"/\" + fileName;\n\t\t\tif ( fs.statSync( fullPath ).isDirectory() ) {\n\t\t\t\trecurse( fullPath );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcontent = fs.readFileSync( fullPath, {\n\t\t\t\tencoding: \"utf-8\"\n\t\t\t} );\n\t\t\tif ( !/@VERSION/.test( content ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmatches.push( fullPath );\n\t\t\tfs.writeFileSync( fullPath, content.replace( /@VERSION/g, Release.newVersion ) );\n\t\t} );\n\t}\n\n\t[ \"ui\", \"themes\" ].forEach( recurse );\n\n\tconsole.log( \"Replaced @VERSION in \" + matches.length + \" files.\" );\n\n\treturn matches;\n}\n\nfunction removeExternals ( packager ) {\n\tObject.keys( packager.builtFiles ).forEach( function( filepath ) {\n\t\tif ( /^external\\//.test( filepath ) ) {\n\t\t\tdelete packager.builtFiles[ filepath ];\n\t\t}\n\t} );\n}\n\nfunction addManifest( packager ) {\n\tvar output = packager.builtFiles;\n\toutput.MANIFEST = Object.keys( output ).sort( function( a, b ) {\n\t\treturn a.localeCompare( b );\n\t} ).map( function( filepath ) {\n\t\tvar md5 = crypto.createHash( \"md5\" );\n\t\tmd5.update( output[ filepath ] );\n\t\treturn filepath + \" \" + md5.digest( \"hex\" );\n\t} ).join( \"\\n\" );\n}\n\nfunction buildCDNPackage( callback ) {\n\tconsole.log( \"Building CDN package\" );\n\tvar JqueryUi = require( \"download.jqueryui.com/lib/jquery-ui\" );\n\tvar Package = require( \"download.jqueryui.com/lib/package-1-12-themes\" );\n\tvar Packager = require( \"node-packager\" );\n\tvar jqueryUi = new JqueryUi( path.resolve( \".\" ) );\n\tvar target = fs.createWriteStream( \"../\" + jqueryUi.pkg.name + \"-\" + jqueryUi.pkg.version +\n\t\t\"-cdn.zip\" );\n\tvar packager = new Packager( jqueryUi.files().cache, Package, {\n\t\tcomponents: jqueryUi.components().map( function( component ) {\n\t\t\treturn component.name;\n\t\t} ),\n\t\tjqueryUi: jqueryUi,\n\t\tthemeVars: null\n\t} );\n\tpackager.ready.then( function() {\n\t\tremoveExternals( packager );\n\t\taddManifest( packager );\n\t\tpackager.toZip( target, {\n\t\t\tbasedir: \"\"\n\t\t}, function( error ) {\n\t\t\tif ( error ) {\n\t\t\t\tRelease.abort( \"Failed to zip CDN package\", error );\n\t\t\t}\n\t\t\tcallback();\n\t\t} );\n\t} );\n}\n\nRelease.define( {\n\tnpmPublish: true,\n\tissueTracker: \"trac\",\n\tcontributorReportId: 22,\n\tchangelogShell: function() {\n\t\tvar monthNames = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n\t\t\t\t\"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t\t\tnow = new Date();\n\t\treturn \"<script>{\\n\\t\\\"title\\\": \\\"jQuery UI \" + Release.newVersion + \" Changelog\\\"\\n\" +\n\t\t\t\"}</script>\\n\\nReleased on \" + monthNames[ now.getMonth() ] + \" \" + now.getDate() +\n\t\t\t\", \" + now.getFullYear() + \"\\n\\n\";\n\t},\n\tgenerateArtifacts: function( fn ) {\n\t\tvar files = replaceAtVersion();\n\n\t\tbuildCDNPackage( function copyCdnFiles() {\n\t\t\tvar zipFile = shell.ls( \"../jquery*-cdn.zip\" )[ 0 ],\n\t\t\t\ttmpFolder = \"../tmp-zip-output\",\n\t\t\t\tunzipCommand = \"unzip -o \" + zipFile + \" -d \" + tmpFolder;\n\n\t\t\tconsole.log( \"Unzipping for dist/cdn copies\" );\n\t\t\tshell.mkdir( \"-p\", tmpFolder );\n\t\t\tRelease.exec( {\n\t\t\t\tcommand: unzipCommand,\n\t\t\t\tsilent: true\n\t\t\t}, \"Failed to unzip cdn files\" );\n\n\t\t\tshell.mkdir( \"-p\", \"dist/cdn\" );\n\t\t\tshell.cp( tmpFolder + \"/jquery-ui*.js\", \"dist/cdn\" );\n\t\t\tshell.cp( \"-r\", tmpFolder + \"/themes\", \"dist/cdn\" );\n\t\t\tfn( files );\n\t\t} );\n\t}\n} );\n\n};\n\nmodule.exports.dependencies = [\n\t\"download.jqueryui.com@2.1.2\",\n\t\"node-packager@0.0.6\",\n\t\"shelljs@0.2.6\"\n];\n"]}